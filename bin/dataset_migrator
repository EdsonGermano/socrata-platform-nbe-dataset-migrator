#!/usr/bin/env ruby

require 'nbe/dataset_migrator'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: dataset_migrator [options]'

  opts.on('-d', '--dataset [DATASET_ID]', 'Dataset to migrate to target environment.') do |id|
    options[:source_id] = id
  end

  opts.on('--sd [DOMAIN]', 'Source domain') do |domain|
    domain = "https://#{domain}" unless domain.start_with?('http')
    options[:source_domain] = domain
  end

  opts.on('--st [TOKEN]', 'Source app token') do |token|
    options[:source_token] = token
  end

  opts.on('--td [DOMAIN]', 'Target domain') do |domain|
    domain = "https://#{domain}" unless domain.start_with?('http')
    options[:target_domain] = domain
  end

  opts.on('--tt [TOKEN]', 'Target app token') do |token|
    options[:target_token] = token
  end

  opts.on('-r', '--rows [ROW_LIMIT]', 'Number of rows to copy over, default: copies all') do |rows|
    options[:row_limit] = rows.to_i
  end

  opts.on('--[no-]publish', 'Publish dataset after migration, default is to publish') do |publish|
    options[:publish] = publish
  end

  opts.on('--ignore-computed-columns', 'Ignores migration of computed columns') do |_|
    options[:ignored_computed_columns] = true
  end

  opts.on('-v', '--verbose', 'Enables verbose logging') do |_|
    options[:log_level] = Logger::DEBUG
  end

  opts.on('-h', '--help', 'Displays help') do
    puts(opts)
    exit
  end
end.parse!

options[:user] = ENV['SOCRATA_USER']
fail('No username found in $SOCRATA_USER') if options[:user].nil?
options[:password] = ENV['SOCRATA_PASSWORD']
fail('No password found in $SOCRATA_PASSWORD') if options[:password].nil?

m = NBE::DatasetMigrator.new(options)
m.run
